from sqlalchemy import BigInteger, Boolean, Column, Date, DateTime, Float, Identity, Index, Integer, Numeric, String, TEXT, Table, Unicode, text
# from sqlalchemy.orm import declarative_base
from .masters_models import Base

# Base = declarative_base()
metadata = Base.metadata


class ClosingValues(Base):
    __tablename__ = 'ClosingValues'
    __table_args__ = {'schema': 'Transactions'}

    ClosingValues_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    BSE_Code = Column(BigInteger)
    ISIN_Code = Column(Unicode(50))
    Date_ = Column('Date', DateTime)
    ST_EXCHNG = Column(Unicode(3))
    Co_Code = Column(BigInteger)
    HIGH = Column(Float(53))
    LOW = Column(Float(53))
    OPEN = Column(Float(53))
    CLOSE = Column(Float(53))
    TDCLOINDI = Column(Unicode(2))
    VOLUME = Column(BigInteger)
    NO_TRADES = Column(BigInteger)
    NET_TURNOV = Column(Float(53))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class FactSheet(Base):
    __tablename__ = 'FactSheet'
    __table_args__ = (
        Index('NonClusteredIndex-20200710-115925', 'Plan_Id', 'TransactionDate', 'SourceFlag', 'Is_Deleted'),
        {'schema': 'Transactions'}
    )

    FactSheet_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    IsPortfolioProcessed = Column(Boolean, nullable=False, server_default=text('((0))'))
    IsRiskRatioProcessed = Column(Boolean, nullable=False, server_default=text('((0))'))
    Plan_Id = Column(BigInteger)
    TransactionDate = Column(DateTime)
    WeekHigh_52_Rs = Column(Numeric(18, 9))
    WeekLow_52_Rs = Column(Numeric(18, 9))
    TotalStocks = Column(Numeric(18, 9))
    PortfolioP_BRatio = Column(Numeric(18, 9))
    PortfolioP_ERatio = Column(Numeric(18, 9))
    EarningsGrowth_3Yrs_Percent = Column(Numeric(18, 9))
    AvgCreditRating = Column(Numeric(18, 9))
    ModifiedDuration_yrs = Column(Numeric(18, 9))
    StandardDeviation = Column(Numeric(18, 9))
    SharpeRatio = Column(Numeric(18, 9))
    Beta = Column(Numeric(18, 9))
    R_Squared = Column(Numeric(18, 9))
    Alpha = Column(Numeric(18, 9))
    Mean = Column(Numeric(18, 9))
    Sortino = Column(Numeric(18, 9))
    Equity = Column(Numeric(18, 9))
    Debt = Column(Numeric(18, 9))
    Cash = Column(Numeric(18, 9))
    RANKING_RANK_1MONTH = Column(BigInteger)
    COUNT_1MONTH = Column(BigInteger)
    RANKING_RANK_3MONTH = Column(BigInteger)
    COUNT_3MONTH = Column(BigInteger)
    RANKING_RANK_6MONTH = Column(BigInteger)
    COUNT_6MONTH = Column(BigInteger)
    RANKING_RANK_1YEAR = Column(BigInteger)
    COUNT_1YEAR = Column(BigInteger)
    RANKING_RANK_3YEAR = Column(BigInteger)
    COUNT_3YEAR = Column(BigInteger)
    RANKING_RANK_5YEAR = Column(BigInteger)
    COUNT_5YEAR = Column(BigInteger)
    SIP_RETURNS_1YEAR = Column(Numeric(18, 9))
    SIP_RETURNS_3YEAR = Column(Numeric(18, 9))
    SIP_RETURNS_5YEAR = Column(Numeric(18, 9))
    SIP_RANKINGS_1YEAR = Column(BigInteger)
    SIP_RANKINGS_3YEAR = Column(BigInteger)
    SIP_RANKINGS_5YEAR = Column(BigInteger)
    SCHEME_RETURNS_1MONTH = Column(Numeric(18, 9))
    SCHEME_RETURNS_3MONTH = Column(Numeric(18, 9))
    SCHEME_RETURNS_6MONTH = Column(Numeric(18, 9))
    SCHEME_RETURNS_1YEAR = Column(Numeric(18, 9))
    SCHEME_RETURNS_3YEAR = Column(Numeric(18, 9))
    SCHEME_RETURNS_5YEAR = Column(Numeric(18, 9))
    SCHEME_RETURNS_since_inception = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_1MONTH = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_3MONTH = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_6MONTH = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_1YEAR = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_3YEAR = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_5YEAR = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_SI = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_1MONTH = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_3MONTH = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_6MONTH = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_1YEAR = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_3YEAR = Column(Numeric(18, 9))
    SCHEME_CATEGORY_AVERAGE_RETURNS_5YEAR = Column(Numeric(18, 9))
    Risk_Grade = Column(Unicode(100))
    Return_Grade = Column(Unicode(100))
    Exit_Load = Column(Unicode(500))
    ExpenseRatio = Column(Numeric(18, 9))
    SOV = Column(Numeric(18, 9))
    AAA = Column(Numeric(18, 9))
    A1_Plus = Column(Numeric(18, 9))
    AA = Column(Numeric(18, 9))
    A_and_Below = Column(Numeric(18, 9))
    Bill_Rediscounting = Column(Numeric(18, 9))
    Cash_Equivalent = Column(Numeric(18, 9))
    Term_Deposit = Column(Numeric(18, 9))
    Unrated_Others = Column(Numeric(18, 9))
    Bonds_Debentures = Column(Numeric(18, 9))
    Cash_And_Cash_Equivalent = Column(Numeric(18, 9))
    CP_CD = Column(Numeric(18, 9))
    GOI_Securities = Column(Numeric(18, 9))
    MutualFunds_Debt = Column(Numeric(18, 9))
    Securitised_Debt = Column(Numeric(18, 9))
    ShortTerm_Debt = Column(Numeric(18, 9))
    Term_Deposits = Column(Numeric(18, 9))
    Treasury_Bills = Column(Numeric(18, 9))
    VRRatings = Column(BigInteger)
    NetAssets_Rs_Cr = Column(Numeric(18, 9))
    AvgMktCap_Rs_Cr = Column(Numeric(18, 9))
    AvgMaturity_Yrs = Column(Numeric(18, 9))
    SourceFlag = Column(Unicode(20))
    Is_Deleted = Column(Boolean)
    Portfolio_Dividend_Yield = Column(Numeric(18, 9))
    Churning_Ratio = Column(Numeric(18, 9))
    Portfolio_Sales_Growth_Estimated = Column(Numeric(18, 9))
    Portfolio_PAT_Growth_Estimated = Column(Numeric(18, 9))
    Portfolio_Earning_Growth_Estimated = Column(Numeric(18, 9))
    Portfolio_Forward_PE = Column(Numeric(18, 9))
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
    StandardDeviation_1Yr = Column(Numeric(18, 9))
    SharpeRatio_1Yr = Column(Numeric(18, 9))
    Beta_1Yr = Column(Numeric(18, 9))
    R_Squared_1Yr = Column(Numeric(18, 9))
    Alpha_1Yr = Column(Numeric(18, 9))
    Mean_1Yr = Column(Numeric(18, 9))
    Sortino_1Yr = Column(Numeric(18, 9))
    Portfolio_Date = Column(DateTime)
    SCHEME_RETURNS_2YEAR = Column(Numeric(18, 9))
    SCHEME_RETURNS_10YEAR = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_2YEAR = Column(Numeric(18, 9))
    SCHEME_BENCHMARK_RETURNS_10YEAR = Column(Numeric(18, 9))
    AIF_COMMITEDCAPITAL_Rs_Cr = Column(Numeric(18, 9))
    AIF_DRAWDOWNCAPITAL_Rs_Cr = Column(Numeric(18, 9))
    AIF_CAPITALRETURNED_Rs_Cr = Column(Numeric(18, 9))
    AIF_INITIALCLOSUREDATE = Column(DateTime)
    AIF_FUNDCLOSUREDATE = Column(DateTime)
    AIF_ALLOTMENTDATE = Column(DateTime)
    Macaulay_Duration_Yrs = Column(Numeric(12, 6))
    Yield_To_Maturity = Column(Numeric(12, 6))
    AIF_DOLLAR_NAV = Column(Numeric(18, 9))
    AIF_FUND_RATING = Column(Unicode(100))
    Treynor_Ratio = Column(Numeric(18, 9))
    Treynor_Ratio_1Yr = Column(Numeric(18, 9))



class FactsheetAttribution(Base):
    __tablename__ = 'Factsheet_Attribution'
    __table_args__ = {'schema': 'Transactions'}

    Attribution_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger, nullable=False)
    BenchmarkIndices_Id = Column(BigInteger, nullable=False)
    Period = Column(String(1000, 'SQL_Latin1_General_CP1_CI_AS'), nullable=False)
    Dates = Column(String(1000, 'SQL_Latin1_General_CP1_CI_AS'), nullable=False)
    Response_Attribution = Column(TEXT(2147483647, 'SQL_Latin1_General_CP1_CI_AS'), nullable=False)
    Is_Deleted = Column(Boolean, nullable=False, server_default=text('((0))'))
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime, server_default=text('(getdate())'))
    UpdatedBy = Column(BigInteger)
    Updated_Date = Column(DateTime)


class FundStocks(Base):
    __tablename__ = 'FundStocks'
    __table_args__ = {'schema': 'Transactions'}

    FundStocks_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    AMC_Id = Column(BigInteger, nullable=False)
    AMC_Name = Column(Unicode(300), nullable=False)
    AMC_Logo = Column(Unicode(300), nullable=False)
    Product_Id = Column(BigInteger, nullable=False)
    Product_Name = Column(Unicode(300), nullable=False)
    Product_Code = Column(Unicode(50), nullable=False)
    Fund_Id = Column(BigInteger, nullable=False)
    Fund_Name = Column(Unicode(300), nullable=False)
    Classification_Id = Column(Integer, nullable=False)
    Classification_Name = Column(Unicode(200))
    Plan_Id = Column(BigInteger, nullable=False)
    Plan_Name = Column(Unicode(300), nullable=False)
    HoldingSecurity_Id = Column(BigInteger, nullable=False)
    Portfolio_Date = Column(DateTime, nullable=False)
    P_Portfolio_Date = Column(DateTime)
    Percentage_to_AUM = Column(Numeric(30, 10))
    P_Percentage_to_AUM = Column(Numeric(30, 10))
    Diff_Percentage_to_AUM = Column(Numeric(30, 10))
    Value_In_Inr = Column(Numeric(30, 10))
    P_Value_In_Inr = Column(Numeric(30, 10))
    IncreaseExposure = Column(Boolean)
    DecreaseExposure = Column(Boolean)
    NewStockForFund = Column(Boolean)
    ExitStockForFund = Column(Boolean)
    HoldingSecurity_Name = Column(Unicode(300))
    InstrumentType = Column(Unicode(100))
    Equity_Style = Column(Unicode(50))
    ISIN_Code = Column(Unicode(100), index=True)
    Issuer_Id =  Column(BigInteger)
    IssuerName = Column(Unicode(100))
    Sector_Id =  Column(BigInteger)
    Sector_Code = Column(Unicode(100))
    Sector_Names = Column(Unicode(100))
    Asset_Class = Column(Unicode(100))
    Risk_Category = Column(Unicode(100))
    MarketCap = Column(Unicode(100))
    Purchase_Date = Column(DateTime, server_default=text('(NULL)'))


class Fundamentals(Base):
    __tablename__ = 'Fundamentals'
    __table_args__ = {'schema': 'Transactions'}

    Fundamentals_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    CO_CODE = Column(BigInteger)
    ISIN_Code = Column(Unicode(50))
    PriceDate = Column(DateTime)
    PE = Column(Float(53))
    EPS = Column(Float(53))
    DivYield = Column(Float(53))
    PBV = Column(Float(53))
    mcap = Column(Float(53))
    PE_CONS = Column(Float(53))
    EPS_CONS = Column(Float(53))
    PBV_CONS = Column(Float(53))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class IndexWeightage(Base):
    __tablename__ = 'IndexWeightage'
    __table_args__ = (
        Index('NonClusteredIndex-20201112-130303', 'CO_CODE', 'ISIN_Code', 'WDATE', 'Index_CO_CODE'),
        {'schema': 'Transactions'}
    )

    IndexWeightage_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    CO_CODE = Column(BigInteger)
    ISIN_Code = Column(Unicode(50))
    WDATE = Column(DateTime)
    Index_CO_CODE = Column(BigInteger)
    CLOSEPRICE = Column(Float(53))
    NOOFSHARES = Column(Float(53))
    FULLMCAP = Column(Float(53))
    FF_ADJFACTOR = Column(Float(53))
    FF_MCAP = Column(Float(53))
    WEIGHT_INDEX = Column(Float(53))
    Index_Type = Column(Unicode(3))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class NAV(Base):
    __tablename__ = 'NAV'
    __table_args__ = (
        Index('NonClusteredIndex-20200710-120108', 'Plan_Id', 'NAV_Date', 'NAV_Type'),
        {'schema': 'Transactions'}
    )

    NAV_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger)
    NAV_Date = Column(Date)
    NAV = Column(Float(53))
    NAV_PortfolioReturn = Column(Numeric(18, 2))
    Is_Deleted = Column(Boolean)
    NAV_Type = Column(Unicode(1))
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
    is_locked = Column(Boolean)
    RAW_NAV = Column(Numeric(24,12))


class PlanProductMapping(Base):
    __tablename__ = 'PlanProductMapping'
    __table_args__ = (
        Index('NonClusteredIndex-20191003-151814', 'Plan_Id', 'Product_Id'),
        {'schema': 'Transactions'}
    )

    PlanProductMapping_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger)
    Product_Id = Column(BigInteger)
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class PortfolioAnalysis(Base):
    __tablename__ = 'Portfolio_Analysis'
    __table_args__ = {'schema': 'Transactions'}

    Porfolio_Analysis_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger)
    Portfolio_Date = Column(DateTime)
    Attribute_Type = Column(Unicode(200))
    Attribute_Text = Column(Unicode(200))
    Attribute_Value = Column(Numeric(18, 2))
    Attribute_Sub_Text = Column(Unicode(200))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class PortfolioHoldings(Base):
    __tablename__ = 'Portfolio_Holdings'
    __table_args__ = {'schema': 'Transactions'}

    Portfololio_Holdings_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger)
    Portfolio_Date = Column(DateTime)
    Holding_Type = Column(Unicode(200))
    ISIN_Code = Column(Unicode(200))
    Security_Name = Column(Unicode(200))
    Current_Weight = Column(Numeric(18, 2))
    Difference_Weight = Column(Numeric(18, 2))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class PortfolioSectors(Base):
    __tablename__ = 'Portfolio_Sectors'
    __table_args__ = {'schema': 'Transactions'}

    Portfolio_Sectors_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Plan_Id = Column(BigInteger)
    Portfolio_Date = Column(DateTime)
    Sector_Code = Column(Unicode(100))
    Sector_Name = Column(Unicode(200))
    Sub_Sector_Name = Column(Unicode(200))
    Percentage_To_AUM = Column(Numeric(18, 2))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
    LONG_SHORT = Column(String(50, 'SQL_Latin1_General_CP1_CI_AS'))


class RiskFreeIndexRate(Base):
    __tablename__ = 'RiskFreeIndexRate'
    __table_args__ = {'schema': 'Transactions'}

    RiskFreeIndexRate_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Date = Column('Date', DateTime)
    Rate = Column(Numeric(18, 10))
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
    Is_Deleted = Column(Boolean)


class TRIReturns(Base):
    __tablename__ = 'TRI_Returns'
    __table_args__ = {'schema': 'Transactions'}

    TRI_Returns_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Exchange = Column(Unicode(10))
    TRI_Co_Code = Column(Integer)
    TRI_IndexName = Column(Unicode(100))
    TRI_IndexDate = Column(DateTime)
    Return_1Week = Column(Float(53))
    Return_1Month = Column(Float(53))
    Return_3Month = Column(Float(53))
    Return_6Month = Column(Float(53))
    Return_1Year = Column(Float(53))
    Return_3Year = Column(Float(53))
    Co_Code = Column(Integer)
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Crated_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)


class UnderlyingHoldings(Base):
    __tablename__ = 'Underlying_Holdings'
    __table_args__ = (
        Index('NonClusteredIndex-20190928-134016', 'Fund_Code', 'ISIN_Code', 'Portfolio_Date', 'Sector_Code'),
        Index('NonClusteredIndex-20200710-115512', 'Fund_Id', 'HoldingSecurity_Id'),
        {'schema': 'Transactions'}
    )

    Underlying_Holdings_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    Fund_Id = Column(BigInteger)
    Fund_Code = Column(Unicode(200))
    ISIN_Code = Column(Unicode(200))
    Portfolio_Date = Column(DateTime)
    Sector_Code = Column(Unicode(100))
    Sector_Names = Column(Unicode(300))
    Company_Security_Name = Column(Unicode(300))
    Asset_Class = Column(Unicode(100))
    Percentage_to_AUM = Column(Numeric(30, 9))
    Value_in_INR = Column(Numeric(25, 10))
    Risk_Category = Column(Unicode(100))
    InstrumentType = Column(Unicode(100))
    IssuerName = Column(Unicode(200))
    IssuerCode = Column(Unicode(100))
    MarketCap = Column(Numeric(25, 10))
    StocksRank = Column(Unicode(100))
    Is_Deleted = Column(Boolean)
    Created_By = Column(BigInteger)
    Created_Date = Column(DateTime)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
    UploadFrameworkDetails_Id = Column(BigInteger)
    HoldingSecurity_Id = Column(BigInteger)
    Purchase_Date = Column(DateTime, server_default=text('(NULL)'))
    STOCK_STOCKDERIVATIVE_INDEXDERIVATIVE = Column(String(255, 'SQL_Latin1_General_CP1_CI_AS'))
    INDEX_CODE = Column(String(255, 'SQL_Latin1_General_CP1_CI_AS'))
    LONG_SHORT = Column(String(50, 'SQL_Latin1_General_CP1_CI_AS'))
    LISTED_UNLISTED = Column(String(50, 'SQL_Latin1_General_CP1_CI_AS'), server_default=text("('Listed')"))
    CIN = Column(String(25, 'SQL_Latin1_General_CP1_CI_AS'))
    Location_City = Column(String(50, 'SQL_Latin1_General_CP1_CI_AS'))
    Amount_Invested_Crs = Column(Numeric(18, 9))
    Asset_Type_Allocation = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))
    Investment_Structure = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))
    Total_Receipts_Crs = Column(Numeric(18, 9))
    Exit_Date = Column(DateTime)
    Exit_IRR = Column(Numeric(18, 9))
    Exit_Multiple = Column(Numeric(18, 9))
    Project_Stage = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))
    Instrument = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))
    Instrument_Rating = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))
    secured_unsecured = Column(String(100, 'SQL_Latin1_General_CP1_CI_AS'))


class UploadFrameworkDetails(Base):
    __tablename__ = 'UploadFrameworkDetails'
    __table_args__ = {'schema': 'Transactions'}

    UploadFrameworkDetails_Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    UploadFramework_Id = Column(BigInteger)
    UploadFrameworkDetails_Source = Column(Unicode(50))
    UploadFrameworkDetails_Result = Column(Unicode(50))
    UploadFrameworkStatus_Id = Column(Integer)
    Is_Deleted = Column(Boolean)


class FundScreener(Base):
    __tablename__ = 'FundScreener'
    __table_args__ = (
        {'schema': 'Transactions'}
    )

    id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    transaction_date = Column(DateTime)
    # portfolio_date = Column(DateTime)
    product = Column(Unicode(200))
    # plan_name = Column(Unicode(200))
    fund = Column(Unicode(200))
    amc = Column(Unicode(200))
    classification_name = Column(Unicode(200))
    asset_class = Column(Unicode(200))
    expense_ratio = Column(Numeric(18, 4))
    total_stocks = Column(Integer)
    aum = Column(Numeric(18, 4))
    equity = Column(Numeric(18, 4))
    debt = Column(Numeric(18, 4))
    cash = Column(Numeric(18, 4))
    avg_market_cap_in_cr = Column(Numeric(18, 4))
    pb_ratio = Column(Numeric(18, 4))
    pe_ratio = Column(Numeric(18, 4))
    avg_maturity_years = Column(Numeric(18, 4))
    modified_duration_years = Column(Numeric(18, 4))
    portfolio_dividend_yield = Column(Numeric(18, 4))
    churning_ratio = Column(Numeric(18, 4))
    returns_1_month = Column(Numeric(18, 4))
    returns_3_months = Column(Numeric(18, 4))
    returns_6_months = Column(Numeric(18, 4))
    returns_1_yr = Column(Numeric(18, 4))
    returns_2_yr = Column(Numeric(18, 4))
    returns_3_yr = Column(Numeric(18, 4))
    returns_5_yr = Column(Numeric(18, 4))
    returns_10_yr = Column(Numeric(18, 4))
    returns_since_inception = Column(Numeric(18, 4))
    std_1_yr = Column(Numeric(18, 4))
    sharpe_ratio_1_yr = Column(Numeric(18, 4))
    beta_1_yr = Column(Numeric(18, 4))
    r_squared_1_yr = Column(Numeric(18, 4))
    alpha_1_yr = Column(Numeric(18, 4))
    mean_1_yr = Column(Numeric(18, 4))
    sortino_1_yr = Column(Numeric(18, 4))
    std_3_yr = Column(Numeric(18, 4))
    sharpe_ratio_3_yr = Column(Numeric(18, 4))
    beta_3_yr = Column(Numeric(18, 4))
    r_squared_3_yr = Column(Numeric(18, 4))
    alpha_3_yr = Column(Numeric(18, 4))
    mean_3_yr = Column(Numeric(18, 4))
    sortino_3_yr = Column(Numeric(18, 4))
    inception_date = Column(DateTime)
    benchmark_name = Column(Unicode(200))
    large_cap = Column(Numeric(18, 4))
    mid_cap = Column(Numeric(18, 4))
    small_cap = Column(Numeric(18, 4))
    scheme_rolling_min_1_yr = Column(Numeric(18, 4))
    scheme_rolling_max_1_yr = Column(Numeric(18, 4))
    scheme_rolling_avg_1_yr = Column(Numeric(18, 4))
    scheme_rolling_median_1_yr = Column(Numeric(18, 4))
    scheme_rolling_positive_1_yr = Column(Numeric(18, 4))
    scheme_rolling_neutral_1_yr = Column(Numeric(18, 4))
    scheme_rolling_negative_1_yr = Column(Numeric(18, 4))
    scheme_rolling_min_3_yr = Column(Numeric(18, 4))
    scheme_rolling_max_3_yr = Column(Numeric(18, 4))
    scheme_rolling_avg_3_yr = Column(Numeric(18, 4))
    scheme_rolling_median_3_yr = Column(Numeric(18, 4))
    scheme_rolling_positive_3_yr = Column(Numeric(18, 4))
    scheme_rolling_neutral_3_yr = Column(Numeric(18, 4))
    scheme_rolling_negative_3_yr = Column(Numeric(18, 4))
    scheme_rolling_min_5_yr = Column(Numeric(18, 4))
    scheme_rolling_max_5_yr = Column(Numeric(18, 4))
    scheme_rolling_avg_5_yr = Column(Numeric(18, 4))
    scheme_rolling_median_5_yr = Column(Numeric(18, 4))
    scheme_rolling_positive_5_yr = Column(Numeric(18, 4))
    scheme_rolling_neutral_5_yr = Column(Numeric(18, 4))
    scheme_rolling_negative_5_yr = Column(Numeric(18, 4))
    bm_rolling_min_1_yr = Column(Numeric(18, 4))
    bm_rolling_max_1_yr = Column(Numeric(18, 4))
    bm_rolling_avg_1_yr = Column(Numeric(18, 4))
    bm_rolling_median_1_yr = Column(Numeric(18, 4))
    bm_rolling_positive_1_yr = Column(Numeric(18, 4))
    bm_rolling_neutral_1_yr = Column(Numeric(18, 4))
    bm_rolling_negative_1_yr = Column(Numeric(18, 4))
    bm_rolling_min_3_yr = Column(Numeric(18, 4))
    bm_rolling_max_3_yr = Column(Numeric(18, 4))
    bm_rolling_avg_3_yr = Column(Numeric(18, 4))
    bm_rolling_median_3_yr = Column(Numeric(18, 4))
    bm_rolling_positive_3_yr = Column(Numeric(18, 4))
    bm_rolling_neutral_3_yr = Column(Numeric(18, 4))
    bm_rolling_negative_3_yr = Column(Numeric(18, 4))
    bm_rolling_min_5_yr = Column(Numeric(18, 4))
    bm_rolling_max_5_yr = Column(Numeric(18, 4))
    bm_rolling_avg_5_yr = Column(Numeric(18, 4))
    bm_rolling_median_5_yr = Column(Numeric(18, 4))
    bm_rolling_positive_5_yr = Column(Numeric(18, 4))
    bm_rolling_neutral_5_yr = Column(Numeric(18, 4))
    bm_rolling_negative_5_yr = Column(Numeric(18, 4))
    fund_age_in_months = Column(Integer)


class DebtScreener(Base):
    __tablename__ = 'DebtScreener'
    __table_args__ = (
        {'schema': 'Transactions'}
    )

    id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    data_date = Column(DateTime)
    security_name = Column(Unicode(100))
    isin = Column(Unicode(12))
    security_type = Column(Unicode(100))
    bond_type = Column(Unicode(200))
    country = Column(Unicode(2))
    issuer = Column(Unicode(70))
    maturity_price = Column(Numeric(16, 6))
    maturity_based_on = Column(Unicode(10))
    maturity_benchmark_index = Column(Unicode(100))
    is_perpetual = Column(Boolean)
    on_tap_indicator = Column(Boolean)
    coupon_type = Column(Unicode(70))
    interest_payment_frequency = Column(Unicode(70))
    is_cumulative = Column(Boolean)
    compounding_frequency = Column(Unicode(70))
    min_investment_amount = Column(Numeric(16, 6))
    frn_index_benchmark = Column(Unicode(10))
    issuer_type = Column(Unicode(50))
    issue_size = Column(Numeric(36, 6))
    yield_at_issue = Column(Numeric(16, 6))
    maturity_structure = Column(Unicode(50))
    convention_method = Column(Unicode(10))
    interest_commencement_date = Column(Date)
    frn_type = Column(Unicode(10))
    markup = Column(Numeric(16, 6))
    minimum_interest_rate = Column(Numeric(16, 6))
    maximum_interest_rate = Column(Numeric(16, 6))
    is_guaranteed = Column(Boolean)
    is_secured = Column(Boolean)
    security_charge = Column(Unicode(10))
    security_collateral = Column(Boolean)
    tier = Column(Integer)
    is_upper = Column(Boolean)
    is_sub_ordinate = Column(Boolean)
    is_senior = Column(Unicode(50))
    is_callable = Column(Boolean)
    is_puttable = Column(Boolean)
    strip = Column(Unicode(50))
    is_taxable = Column(Boolean)
    latest_applied_intpy_annual_coupon_rate = Column(Numeric(16, 6))
    sector_name = Column(Unicode(200))
    currency = Column(Unicode(4))
    maturity_date = Column(Date)
    interest_rate = Column(Numeric(16, 6))
    face_value = Column(Numeric(16, 6))
    paid_up_value = Column(Numeric(16, 6))
    crisil = Column(Unicode(10))
    care = Column(Unicode(10))
    fitch = Column(Unicode(10))
    icra = Column(Unicode(10))
    brickwork = Column(Unicode(10))
    sovereign = Column(Unicode(10))
    acuite = Column(Unicode(10))


class DebtPrice(Base):
    __tablename__ = 'DebtPrice'
    __table_args__ = (
        {'schema': 'Transactions'}
    )

    Id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    DebtPrice_Id = Column(BigInteger, nullable=False)
    DebtSecurity_Id = Column(BigInteger, nullable=False)
    ISIN = Column(Unicode(12), nullable=False)
    AsofDate = Column(Date, nullable=False)
    Trading_Date = Column(Date, nullable=False)
    Exchange_Code = Column(Unicode(50), nullable=False)
    Exchange = Column(Unicode(50))
    Segment_Code = Column(Unicode(50))
    Segment = Column(Unicode(50))
    Local_Code = Column(Unicode(50))
    No_Of_Trades = Column(BigInteger)
    Traded_Qty = Column(BigInteger)
    Traded_Value = Column(Numeric(36, 6))
    Open = Column(Numeric(16, 6))
    High = Column(Numeric(16, 6))
    Low = Column(Numeric(16, 6))
    Close = Column(Numeric(16, 6))
    Weighted_Avg_Price = Column(Numeric(16, 6))
    FaceValuePrice = Column(Numeric(16, 6), nullable=False)
    Currency = Column(Unicode(4))
    WYTM = Column(Numeric(16, 6))
    TT_Status = Column(Unicode(100))
    Trade_Type = Column(Unicode(100))
    Settlement_Type = Column(Unicode(100))
    Residual_Maturity_Date = Column(Date)
    Residual_Maturity_Derived_From = Column(Unicode(100))
    Clean_Dirty_Indicator = Column(Unicode(4))
    Dirty_Price = Column(Numeric(16, 6))
    Is_Deleted = Column(Boolean, nullable=False)
    Created_By = Column(BigInteger, nullable=False)
    Created_Date = Column(DateTime, nullable=False)
    Updated_By = Column(BigInteger)
    Updated_Date = Column(DateTime)
